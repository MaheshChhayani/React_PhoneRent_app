{"version":3,"sources":["./src/app/mobile-details/mobile-details.component.ts","./src/app/mobile-details/mobile-details.component.html","./src/app/authentication.service.ts","./src/app/view-requests/view-requests.component.html","./src/app/view-requests/view-requests.component.ts","./src/app/register/register.component.html","./src/app/register/register.component.ts","./src/app/mobiles.service.ts","./src/app/bad-url/bad-url.component.ts","./src/app/bad-url/bad-url.component.html","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/view-mobiles/view-mobiles.component.html","./src/app/view-mobiles/view-mobiles.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/storage.ts","./src/app/add-review/add-review.component.html","./src/app/add-review/add-review.component.ts","./src/app/app.module.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/history.service.ts","./src/app/customers.service.ts","./src/app/view-reviews/view-reviews.component.html","./src/app/view-reviews/view-reviews.component.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/reviews.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\nimport { switchMap } from 'rxjs/operators';\nimport { AuthenticationService } from '../authentication.service';\nimport { Customers } from '../customers';\nimport { CustomersService } from '../customers.service';\nimport { Mobiles } from '../mobiles';\nimport { MobilesService } from '../mobiles.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-mobile-details',\n  templateUrl: './mobile-details.component.html',\n  styleUrls: ['./mobile-details.component.css']\n})\nexport class MobileDetailsComponent implements OnInit {\n\n  mobile: Mobiles;\n  rentprice: number = 0;\n\n  customers: Customers[] = [];\n\n  customer: Customers = {\n    _id: \"\",\n    name: \"\",\n    emailid: \"\",\n    mobileid: \"\",\n    rentprice: 0,\n    mobilename: \"\",\n    startdate: \"\",\n    contactno: \"\"\n  };\n\n  constructor(private service: MobilesService, private customerService: CustomersService,\n    private authenticationService: AuthenticationService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.pipe(switchMap((params: Params) => {\n      return this.service.getSingleMobile(params.mobileid);\n    }))\n      .subscribe((newMobile: Mobiles) => {\n        this.mobile = newMobile;\n        this.rentprice = newMobile.price / 100 * 7;\n      });\n    this.route.params.pipe(switchMap((params: Params) => {\n      return this.customerService\n        .searchCustomer(params.mobileid);\n    }))\n    .subscribe((customers: Customers[]) => {\n        this.customers = customers.map(mobile => {\n          return mobile;\n        });\n      });\n  }\n\n  displayForm() {\n    this.customer.rentprice = this.rentprice;\n    this.customer.mobileid = this.mobile._id;\n    this.customer.mobilename = this.mobile.name;\n  }\n\n  public addNewCustomer(newCustomer: Customers) {\n    newCustomer.name = this.getUsername();\n    newCustomer.emailid = this.getEmailID();\n    this.customerService.addCustomer(newCustomer)\n      .then((newCustomer: Customers) => {\n        alert(\"Your Request is Generated and Save in our Database.\");\n      });;\n  }\n\n  public isLoggedIn(): boolean {\n    return this.authenticationService.isLoggedIn();\n  }\n\n  public getUsername(): string {\n    const user: User = this.authenticationService.getCurrentUser();\n    return user ? user.name : '';\n  }\n\n  public getEmailID(): string {\n    const user: User = this.authenticationService.getCurrentUser();\n    return user ? user.email : '';\n  }\n}\n","<div class=\"text-center\">\n    <h1 class=\"display-4 heading-font\">{{mobile.name}} Details <span *ngIf=\"customers.length > 0\">(Not Available)</span></h1>\n</div>\n<div class=\"row\">\n    <div class=\"col-4\">\n        <div>\n            <img src=\"http://localhost:3000/images/{{mobile.imagename}}\" alt=\"\" >\n        </div>\n    </div>\n    <div class=\"col-8\">\n        <h2 class=\"font2\">Performance</h2>\n        <p class=\"font1\"> {{mobile.performance}}</p>\n        <h2 class=\"font2\">Display</h2>\n        <p class=\"font1\"> {{mobile.display}}</p>\n        <h2 class=\"font2\">Camera</h2>\n        <p class=\"font1\"> {{mobile.camera}}</p>\n        <h2 class=\"font2\">Battery</h2>\n        <p class=\"font1\"> {{mobile.battery}}</p>\n        <h2 class=\"font2\">Price</h2>\n        <p class=\"font1\"> ${{mobile.price}}</p>\n        <h2 class=\"font2\">Rent Price</h2>\n        <p class=\"font1\">${{rentprice.toFixed(2)}} per month</p>\n        <button *ngIf=\"isLoggedIn() && customers.length == 0\" class=\"btn btn-success mr-2\" data-toggle=\"modal\" data-target=\"#myModal\" (click)=\"displayForm()\">Request\n            For Rent This Mobile</button>\n        <p *ngIf=\"!isLoggedIn()\"   class=\"font2\">You have to Register or Login to Process Request</p>\n        <p *ngIf=\"customers.length > 0\" class=\"font2\">This Mobile is Picked on {{customers[0].startdate}}. You have to wait to request it.</p>\n    </div>\n</div>\n<div *ngIf=\"isLoggedIn()\" id=\"myModal\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n\n        <!-- Modal content-->\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                <p class=\"modal-title\">Request</p>\n            </div>\n            <div class=\"modal-body\">\n                <form (ngSubmit)=\"addNewCustomer(customer)\">\n                    <div class=\"form-group\">\n                        <p class=\"font2\">Mobile Name: {{customer.mobilename}}</p>\n                    </div>\n                    <div class=\"form-group\">\n                        <p class=\"font2\">Mobile Rent Price: ${{customer.rentprice.toFixed(2)}}</p>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"contactno\">Enter Contact No:</label>\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"customer.contactno\" id=\"contactno\" name=\"contactno\"\n                            required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"startdate\">Choose Start Date:</label>\n                        <input type=\"date\" class=\"form-control\" [(ngModel)]=\"customer.startdate\" id=\"startdate\" name=\"startdate\" required>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Send Your Request</button>\n\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n            </div>\n        </div>\n\n    </div>\n</div>","import { Inject, Injectable } from '@angular/core';\nimport { AuthResponse } from './auth-response';\nimport { ReviewsService } from './reviews.service';\nimport { BROWSER_STORAGE } from './storage';\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(@Inject(BROWSER_STORAGE) private storage: Storage,\n  private reviewService:ReviewsService) { }\n\n  public getToken(): string {\n    return this.storage.getItem('app-token');\n  }\n\n  public saveToken(token: string): void {\n    this.storage.setItem('app-token', token);\n  }\n\n  public login(user: User): Promise<any> {\n    return this.reviewService.login(user)\n      .then((authResp: AuthResponse) => this.saveToken(authResp.token));\n  }\n\n  public register(user: User): Promise<any> {\n    return this.reviewService.register(user)\n      .then((authResp: AuthResponse) => this.saveToken(authResp.token));\n  }\n\n  public logout(): void {\n    this.storage.removeItem('app-token');\n  }\n\n  public isLoggedIn(): boolean {\n    const token: string = this.getToken();\n    if (token) {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      return payload.exp > (Date.now() / 1000);\n    } else {\n      return false;\n    }\n  }\n\n  public getCurrentUser(): User {\n    if (this.isLoggedIn()) {\n      const token: string = this.getToken();\n      const { email, name } = JSON.parse(atob(token.split('.')[1]));\n      return { email, name } as User;\n    }\n  }\n}\n","<div class=\"text-center\">\n    <h1 class=\"display-4 heading-font\">Your Mobile Requests</h1>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <p *ngIf=\"!isLoggedIn()\" class=\"font2\">Please Login to View Your Requests</p>\n        <table *ngIf=\"isLoggedIn()\" class=\"table table-bordered\">\n            <thead class=\"thead-dark\">\n                <tr>\n                    <th>Name</th>\n                    <th>Contact No</th>\n                    <th>Mobile Name</th>\n                    <th>Rent Price</th>\n                    <th>Start Date</th>\n                    <th>Operations</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngIf=\"customers.length == 0\">\n                    <td colspan=\"6\" align=\"center\">There is No Requests</td>\n                </tr>\n                <tr *ngFor=\"let customer of customers\">\n                    <td>{{customer.name}}</td>\n                    <td>{{customer.contactno}}</td>\n                    <td>{{customer.mobilename}}</td>\n                    <td>${{customer.rentprice.toFixed(2)}}</td>\n                    <td>{{customer.startdate}}</td>\n                    <td>\n                        <button class=\"btn btn-danger\" (click)=\"deleteRecord(customer._id)\">Return The Mobile</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { Customers } from '../customers';\nimport { CustomersService } from '../customers.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-view-requests',\n  templateUrl: './view-requests.component.html',\n  styleUrls: ['./view-requests.component.css']\n})\nexport class ViewRequestsComponent implements OnInit {\n\n  customers : Customers[] = []; \n\n  emailid : string = \"\";\n\n  constructor(private service:CustomersService,private authenticationService:AuthenticationService){\n\n  }\n\n  ngOnInit(){\n    this.searchRequests();\n  }\n\n  searchRequests(){\n    if(this.isLoggedIn()){\n      this.service\n      .getAllCustomers(this.getEmailID())\n      .then((customers:Customers[]) => {\n        this.customers = customers.map( customer => {\n          return customer;\n        });\n      }); \n    }\n    \n  }\n\n  public deleteRecord(customerid:string){\n    let ans = confirm(\"Are You Sure to Return the Mobile?\");\n    if(ans){\n      this.service.deleteSingleCustomer(customerid)\n      .then((customer:Customers) => {\n        alert(\"Customer Request for Returning Mobile is Successfully processed.\");   \n        this.searchRequests();     \n      });\n    }\n    \n  }\n  public isLoggedIn(): boolean {\n    return this.authenticationService.isLoggedIn();\n  }\n  public getUsername(): string {\n    const user: User = this.authenticationService.getCurrentUser();\n    return user ? user.name : '';\n  }\n\n  public getEmailID():string{\n    const user: User = this.authenticationService.getCurrentUser();\n    return user ? user.email : '';\n  }\n}\n","<div class=\"text-center\">\n    <h1 class=\"display-4 heading-font\">Register Yourself</h1>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <p class=\"lead\">Already a member? Please <a routerLink=\"/login\">log in</a> instead</p>\n        <form (submit)=\"onRegisterSubmit()\">\n            <div role=\"alert\" *ngIf=\"formError\" class=\"alert alert-danger\">{{ formError }}</div>\n            <div class=\"form-group\">\n                <label for=\"name\">Full Name</label>\n                <input class=\"form-control\" id=\"name\" name=\"name\" placeholder=\"Enter your name\"\n                    [(ngModel)]=\"credentials.name\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">Email Address</label>\n                <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Enter email address\"\n                    [(ngModel)]=\"credentials.email\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\"\n                    placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n            </div>\n            <button type=\"submit\" role=\"button\" class=\"btn btn-primary\">Register!</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication.service';\nimport { HistoryService } from '../history.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  public formError: string = '';\n\n  public credentials = {\n    name: '',\n    email: '',\n    password: '',\n    areacode: '',\n    country: '',\n    address: ''\n  };\n  constructor(private router: Router,\n    private authenticationService: AuthenticationService,\n    private historyService: HistoryService) { }\n\n  ngOnInit(): void {\n  }\n  public onRegisterSubmit(): void {\n    this.formError = '';\n    if (\n      !this.credentials.name ||\n      !this.credentials.email ||\n      !this.credentials.password\n    ) {\n      this.formError = 'All fields are required, please try again';\n    } else {\n      this.doRegister();\n    }\n  }\n\n  private doRegister(): void {\n    this.authenticationService.register(this.credentials)\n      .then(() => this.router.navigateByUrl(this.historyService.getLastNonLoginUrl()))\n      .catch((message) => this.formError = message);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Mobiles } from './mobiles';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MobilesService {\n\n  private api_base_url: string = \"http://localhost:3000/api/mobiles\";\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: any) {\n    console.log(error);\n  }\n\n  public getAllMobiles():Promise<void|Mobiles[]>{\n    return this.http.get(this.api_base_url)\n      .toPromise()\n      .then(response => response as Mobiles[])\n      .catch(this.handleError);\n  }\n\n  public getSingleMobile(mobileid:string):Promise<void|Mobiles>{\n    return this.http.get(this.api_base_url + \"/\" + mobileid)\n      .toPromise()\n      .then( response => response as Mobiles)\n      .catch(this.handleError);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bad-url',\n  templateUrl: './bad-url.component.html',\n  styleUrls: ['./bad-url.component.css']\n})\nexport class BadUrlComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center\">\n    <h1 class=\"display-4 heading-font\">Bad Request URL</h1>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <p class=\"text-justify\">May be You Request a Wrong URL, Please check it properly.</p>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center\">\n    <h1 class=\"display-4 heading-font\">About Us</h1>\n</div>\n<div class=\"row\">\n    <div class=\"col-sm-4\">\n        <img class=\"rounded float-right\" src=\"../../assets/about/about.png\" style=\"width:100%; height: 80%;\" />\n    </div>\n    <div class=\"col-sm-8\">\n        <p class=\"text-justify\">\n            Choose Phone Rent App In Canada And Enjoy Massive Savings\n        </p>\n        <p class=\"text-justify\">Phone Rent is a rental company with over 20 years of experience in the ICT rental business. With our long-standing experiences and many clients in the Netherlands, and abroad, we are able to offer our assistance and support to any company in any situation. Our rental staff will gladly offer their personal assistance. The developments in the world of ICT succeed each other rapidly. Needless to say that we follow the market continuously. Our success formula is that we can deliver any device from our own (large) stock quickly, wherever and whenever you want. You will find our people from Amsterdam to Madrid, and we will always do our utmost to assist you in any way. Even when you are looking for a very particular product or when you have specific needs, we will help you to find the right solution. Together with our technical specialists, we can more or less realise anything you want. And just in case we don’t have the required expertise in-house, we can always use our extensive network of partners.</p>\n        <p class=\"text-justify\">\n            Phone Rent App is a top-rated Canada rental brand, with an established presence across several major cities,\n            including the capital: Ottawa! When you purchase mobile from a store, you\n            spend a great deal of money. You can rent the same mobile item from us for a\n            fraction of the retail price.\n        </p>\n        <p class=\"text-justify\">\n            Our inventory includes products made by the best, most reputable brands in the market. Every product\n            undergoes strict quality control checks and is in mint condition. You can rent from us for short term or\n            long term. We have something for every need and budget.\n        </p>\n    </div>\n</div>\n<div class=\"row\">\n    \n    <div class=\"col-xs-offset-1 col-xs-10 col-sm-offset-0 col-sm-4 contact-numbers\">\n        <h3>\n            General &amp; Sales\n        </h3>\n        <strong>+1-214-355-5200</strong>\n        <br />\n        <a href=\"mailto:#\">Phonerentalgeneral@cellhire.com</a>\n    </div>\n    <div class=\"col-xs-offset-1 col-xs-10 col-sm-offset-0 col-sm-4 contact-numbers\">\n        <h3>\n            Customer Service &amp; Billing\n        </h3>\n        <strong>1 877 244 7242</strong>\n        <br />\n        <a href=\"mailto:#\">clientservices@phonerental.com</a>\n    </div>\n    <div class=\"col-xs-offset-1 col-xs-10 col-sm-offset-0 col-sm-4 contact-numbers\">\n        <h3>\n            Technical Support\n        </h3>\n        <strong>1 877 244 7242</strong> \n        <br/>\n        <a href=\"mailto:#\">support@phonerental.com</a>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"demo\" class=\"carousel slide\" data-ride=\"carousel\">\n    <ul class=\"carousel-indicators\">\n        <li data-target=\"#demo\" data-slide-to=\"0\" class=\"active\"></li>\n        <li data-target=\"#demo\" data-slide-to=\"1\"></li>\n        <li data-target=\"#demo\" data-slide-to=\"2\"></li>\n    </ul>\n    <div class=\"carousel-inner\">\n        <div class=\"carousel-item active\">\n            <img src=\"assets/slides/slide2.png\" alt=\"Slide 2\" style=\"width:100%;height:400px\">\n            <div class=\"carousel-caption\">\n                You can take Any Rented Mobile...\n            </div>\n        </div>\n        <div class=\"carousel-item\">\n            <img src=\"assets/slides/slide3.png\" alt=\"Slide 3\" style=\"width:100%;height:400px\">\n            <div class=\"carousel-caption\">\n                In your hand...\n            </div>\n        </div>\n        <div class=\"carousel-item\">\n            <img src=\"assets/slides/slide4.png\" alt=\"Slide 3\" style=\"width:100%;height:400px\">\n            <div class=\"carousel-caption\">\n                At any day or month...\n            </div>\n        </div>\n    </div>\n    <a class=\"carousel-control-prev\" href=\"#demo\" data-slide=\"prev\">\n        <span class=\"carousel-control-prev-icon\"></span>\n    </a>\n    <a class=\"carousel-control-next\" href=\"#demo\" data-slide=\"next\">\n        <span class=\"carousel-control-next-icon\"></span>\n    </a>\n</div>\n<div class=\"text-center\">\n    <h1 class=\"display-4 heading-font\">Home Page</h1>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <p class=\"text-dark\">\n            Hi! We’re <b>Phone Rental Website</b>, an online rental solution for your communication needs.\n        </p>\n        <p class=\"text-dark\">\n\n            Why renting, you ask? Well, because we understand that unnecessary mobile appliance costs aren’t the\n            best investment options. So we decided to come up with an easier solution instead. We provide more than\n            online rental services, we help you explore a world of possibilities. With our assured quality and prompt\n            services,you can say goodbye to all the hassles that come with buying and say hello to convenience.\n        </p>\n        <p class=\"text-dark\">Easy and quick business mobile phone or smartphone rentals? Renting a smartphone for a survey, recording a movie or testing a new app means that you want to be assured of the most appropriate option for your needs. We will always do our best to give you the best advice so that you are satisfied. When you rent your smartphones with Phone Rental you determine your budget in advance and save money. We offer you the lowest price guarantee. Our smartphones can connect wirelessly with Wi-Fi. Do you not have Wi-Fi available at your location? With a fast 3G or 4G connection you are always online. You can also opt to rent a SIM card. Our smartphones recently been released and thoroughly tested by our team. That is why you are assured of new, functioning smartphones.</p>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"text-center\">\n    <h1 class=\"display-4 heading-font\">Available Mobiles</h1>\n</div>\n<div class=\"row\" style=\"margin-bottom:50px;\">\n\n    <div class=\"col-md-3 mb-2\" *ngFor=\"let mobile of mobiles\">\n        <div>\n            \n                <img src=\"http://localhost:3000/images/{{mobile.imagename}}\" alt=\"\" >\n            \n            <div class=\"card-body\">\n                <h5 class=\"card-text\">\n                    {{mobile.name}}\n                </h5>\n                <a class=\"btn btn-primary\" (click)=\"viewDetails(mobile._id)\">View Details</a>\n            </div>\n\n        </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Mobiles } from '../mobiles';\nimport { MobilesService } from '../mobiles.service';\n\n@Component({\n  selector: 'app-view-mobiles',\n  templateUrl: './view-mobiles.component.html',\n  styleUrls: ['./view-mobiles.component.css']\n})\nexport class ViewMobilesComponent implements OnInit {\n\n  mobiles : Mobiles[] = []; \n\n  constructor(private service:MobilesService,private router:Router){\n\n  }\n\n  ngOnInit(){\n    this.service\n      .getAllMobiles()\n      .then((mobiles:Mobiles[]) => {\n        this.mobiles = mobiles.map( mobile => {\n          return mobile;\n        });\n      });      \n  }\n\n  viewDetails(mobileid:string){\n    this.router.navigateByUrl(\"mobile/\" + mobileid);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'phone-rent-app';\n}\n","<app-header></app-header>","import { InjectionToken } from '@angular/core';\n\nexport const BROWSER_STORAGE = new InjectionToken<Storage>('Browser Storage', {\n  providedIn: 'root',\n  factory: () => localStorage\n});\n","<div class=\"text-center\">\n    <h1 class=\"display-4 heading-font\">Give Your Site Review</h1>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <form (ngSubmit)=\"addNewReview(review)\">\n            <div class=\"form-group\">\n                <label for=\"name\">Enter Your Name:</label>\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"review.name\" id=\"name\" name=\"name\" required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"emailid\">Enter Email ID:</label>\n                <input type=\"email\" class=\"form-control\" [(ngModel)]=\"review.emailid\" id=\"emailid\" name=\"emailid\"\n                    required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"reviewtext\">Enter Review Text:</label>\n                <textarea class=\"form-control\" [(ngModel)]=\"review.reviewtext\" id=\"reviewtext\" name=\"reviewtext\"\n                    required></textarea>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"rating\">Choose Site Rating:</label>\n                <select class=\"form-control\" [(ngModel)]=\"review.rating\" id=\"rating\" name=\"rating\">\n                    <option *ngFor=\"let rating of ratings\" value=\"{{rating}}\">{{rating}}</option>\n                </select>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">Save Your Review</button>\n\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Reviews } from '../reviews';\nimport { ReviewsService } from '../reviews.service';\n\n@Component({\n  selector: 'app-add-review',\n  templateUrl: './add-review.component.html',\n  styleUrls: ['./add-review.component.css']\n})\nexport class AddReviewComponent implements OnInit {\n\n  review : Reviews = {\n    _id: '',\n    name:'',\n    emailid:'',\n    reviewtext:'',\n    rating:0   \n  };\n\n  ratings: number[] = [1,2,3,4,5];\n\n  constructor(private service:ReviewsService) { }\n\n  ngOnInit(): void {\n  }\n\n  public addNewReview(newReview:Reviews){\n    this.service.addReview(newReview)\n    .then((review:Reviews) => {\n      alert(\"Your Review is Submitted Successfully. Thanks For Showing your interest to improving us.\");\n      window.location.reload();\n    });;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { BadUrlComponent } from './bad-url/bad-url.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ViewMobilesComponent } from './view-mobiles/view-mobiles.component';\nimport { MobileDetailsComponent } from './mobile-details/mobile-details.component';\nimport { MobilesService } from './mobiles.service';\nimport { AddReviewComponent } from './add-review/add-review.component';\nimport { ViewReviewsComponent } from './view-reviews/view-reviews.component';\nimport { ReviewsService } from './reviews.service';\nimport { ViewRequestsComponent } from './view-requests/view-requests.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    BadUrlComponent,\n    HeaderComponent,\n    ViewMobilesComponent,\n    MobileDetailsComponent,\n    AddReviewComponent,\n    ViewReviewsComponent,\n    ViewRequestsComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [MobilesService,ReviewsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<header>\n    <nav class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\">\n        <div class=\"container\">\n            <a class=\"navbar-brand heading-font\" routerLink=\"home\" ><img src=\"assets/logo/logo.jpeg\"></a>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\"\n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\">\n                <ul class=\"navbar-nav flex-grow-1\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link font1 text-dark\" routerLink=\"about\" routerLinkActive=\"active\">About</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link font1 text-dark\" routerLink=\"mobiles\" routerLinkActive=\"active\">Mobiles</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link font1 text-dark\" routerLink=\"addreview\" routerLinkActive=\"active\">Give Review</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link font1 text-dark\" routerLink=\"reviews\" routerLinkActive=\"active\">Reviews</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link font1 text-dark\" routerLink=\"requests\" routerLinkActive=\"active\">Requests</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a routerLink=\"login\" class=\"nav-link font1 text-dark\" *ngIf=\"!isLoggedIn()\">Sign in</a>\n                    </li>\n                    \n                    <li class=\"nav-item dropdown\"  *ngIf=\"isLoggedIn()\">\n                        <a class=\"nav-link dropdown-toggle font1 text-dark\" data-toggle=\"dropdown\" role=\"button\">{{ getUsername() }}</a>\n                        <div class=\"dropdown-menu\">\n                            <a class=\"dropdown-item font1 text-dark\" (click)=\"doLogout()\">Logout</a>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n</header>\n<div id=\"page-container\">\n    <div id=\"content-wrap\">\n\n   \n        <router-outlet></router-outlet>\n   \n\n</div>\n<div id=\"globalFooter\">\n    <div id=\"footerData\">\n            <div class=\"row\">\n                <div class=\"col-4\">\n                    <ul class=\"footerMenu\">\n                        <li>\n                            <a routerLink=\"home\" >Home</a>\n                        </li>\n                        <li>\n                            <a  routerLink=\"about\" >About</a>\n                        </li>\n                        \n                    </ul>\n                </div>\n                <div class=\"col-4\">\n                    <ul class=\"footerMenu\">\n                        \n                        <li>\n                            <a  routerLink=\"mobiles\">Mobiles</a>\n                        </li>\n                        <li>\n                            <a  routerLink=\"addreview\">Give Review</a>\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"col-4\">\n                    <ul  class=\"footerMenu\">\n                        \n                        <li>\n                            <a  routerLink=\"reviews\" >Reviews</a>\n                        </li>\n                        <li>\n                            <a  routerLink=\"requests\">Requests</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"legal\">\n                Copyright &copy; 2021 - Phone Rental. All Rights Reserved\n            </div>\n        </div>\n    </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { HistoryService } from '../history.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor( private authenticationService: AuthenticationService,\n    private historyService: HistoryService) { }\n\n  ngOnInit(): void {\n  }\n  public doLogout(): void {\n    this.authenticationService.logout();\n  }\n\n  public isLoggedIn(): boolean {\n    return this.authenticationService.isLoggedIn();\n  }\n\n  public getUsername(): string {\n    const user: User = this.authenticationService.getCurrentUser();\n    return user ? user.name : 'Guest';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryService {\n  private urls: string[] = [];\n\n  constructor(private router: Router) {\n    this.router.events\n      .pipe(filter(routerEvent => routerEvent instanceof NavigationEnd))\n      .subscribe((routerEvent: NavigationEnd) => {\n        const url = routerEvent.urlAfterRedirects;\n        this.urls = [...this.urls, url];\n      });\n  }\n\n  public getPreviousUrl(): string {\n    const length = this.urls.length;\n    return length > 1 ? this.urls[length - 2] : '/';\n  }\n\n  public getLastNonLoginUrl(): string {\n    const exclude: string[] = ['/register', '/login'];\n    const filtered = this.urls.filter(url => !exclude.includes(url));\n    const length = filtered.length;\n    return length < 1 ? filtered[length -1] : '/';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Customers } from './customers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomersService {\n\n  private api_base_url: string = \"http://localhost:3000/api/customers\";\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: any) {\n    console.log(error);\n  }\n\n  public getAllCustomers(emailid:string): Promise<void | Customers[]> {\n    return this.http.get(this.api_base_url + \"/\" + emailid)\n      .toPromise()\n      .then(response => response as Customers[])\n      .catch(this.handleError);\n  }\n\n  public addCustomer(newCustomers: Customers): Promise<void | Customers> {\n    return this.http.post(this.api_base_url, newCustomers)\n      .toPromise()\n      .then(response => response as Customers)\n      .catch(this.handleError);\n  }\n\n  public deleteSingleCustomer(customerid:string):Promise<void|Customers>{\n    return this.http.delete(this.api_base_url + \"/\" + customerid)\n      .toPromise()\n      .then( response => response as Customers)\n      .catch(this.handleError);\n  }\n\n  public searchCustomer(mobileid:string): Promise<void | Customers[]> {\n    return this.http.get(this.api_base_url + \"/search/\" + mobileid)\n      .toPromise()\n      .then(response => response as Customers[])\n      .catch(this.handleError);\n  }\n}\n","<div class=\"text-center\">\n    <h1 class=\"display-4 heading-font\">Site Reviews</h1>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <table class=\"table table-bordered\">\n            <thead class=\"thead-dark\">\n                <tr>\n                    <th>Name</th>\n                    <th>Email ID</th>\n                    <th>Review Text</th>\n                    <th>Rating</th>\n                    <th>Review Date</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let review of reviews\">\n                    <td>{{review.name}}</td>\n                    <td>{{review.emailid}}</td>\n                    <td>{{review.reviewtext}}</td>\n                    <td>{{review.rating}}</td>\n                    <td>{{review.reviewdate}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Reviews } from '../reviews';\nimport { ReviewsService } from '../reviews.service';\n\n@Component({\n  selector: 'app-view-reviews',\n  templateUrl: './view-reviews.component.html',\n  styleUrls: ['./view-reviews.component.css']\n})\nexport class ViewReviewsComponent implements OnInit {\n\n  reviews : Reviews[] = []; \n\n  constructor(private service:ReviewsService){\n\n  }\n\n  ngOnInit(){\n    this.service\n      .getAllReviews()\n      .then((reviews:Reviews[]) => {\n        this.reviews = reviews.map( review => {\n          return review;\n        });\n      });      \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './about/about.component';\nimport { AddReviewComponent } from './add-review/add-review.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { MobileDetailsComponent } from './mobile-details/mobile-details.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ViewMobilesComponent } from './view-mobiles/view-mobiles.component';\nimport { ViewRequestsComponent } from './view-requests/view-requests.component';\nimport { ViewReviewsComponent } from './view-reviews/view-reviews.component';\n\nconst routes: Routes = [\n  {path:'home',component:HomeComponent},\n  {path:'about',component:AboutComponent},\n  {path:'mobiles',component:ViewMobilesComponent},\n  {path:'reviews',component:ViewReviewsComponent},\n  {path:'addreview',component:AddReviewComponent},\n  {path:'requests',component:ViewRequestsComponent},\n  {path:'register',component:RegisterComponent},\n  {path:'login',component:LoginComponent},\n  {path:'mobile/:mobileid',component:MobileDetailsComponent},\n  {path:'',redirectTo:\"/home\",pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"text-center\">\n    <h1 class=\"display-4 heading-font\">Login</h1>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\">\n        <p class=\"lead\">Not a member? Please <a routerLink=\"/register\">register</a> first</p>\n        <form (ngSubmit)=\"onLoginSubmit()\">\n            <div role=\"alert\" *ngIf=\"formError\" class=\"alert alert-danger\">{{ formError }}</div>\n            <div class=\"form-group\">\n                <label for=\"email\">Email Address</label>\n                <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Enter email address\"\n                    [(ngModel)]=\"credentials.email\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\"\n                    placeholder=\"Password\" [(ngModel)]=\"credentials.password\">\n            </div>\n            <button type=\"submit\" role=\"button\" class=\"btn btn-primary\">Sign In!</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication.service';\nimport { HistoryService } from '../history.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public formError: string = '';\n\n  public credentials = {\n    name: '',\n    email: '',\n    password: ''\n  };\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private historyService: HistoryService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public onLoginSubmit(): void {\n    this.formError = '';\n    if (!this.credentials.email || !this.credentials.password) {\n      this.formError = 'All fields are required, please try again';\n    } else {\n      this.doLogin();\n    }\n  }\n\n  private doLogin(): void {\n    this.authenticationService.login(this.credentials)\n      .then(() => this.router.navigateByUrl(this.historyService.getLastNonLoginUrl()))\n      .catch((message) => this.formError = message);\n  }\n\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { AuthResponse } from './auth-response';\nimport { Reviews } from './reviews';\nimport { BROWSER_STORAGE } from './storage';\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReviewsService {\n\n  private apiBaseUrl = \"http://localhost:3000/api/\";\n  private api_base_url: string = \"http://localhost:3000/api/reviews\";\n\n  constructor(private http: HttpClient, @Inject(BROWSER_STORAGE) private storage: Storage) { }\n\n  private handleError(error: any): Promise<any> {\n    console.error('Something has gone wrong', error);\n    return Promise.reject(error.message || error);\n  }\n\n  public getAllReviews(): Promise<void | Reviews[]> {\n    return this.http.get(this.api_base_url)\n      .toPromise()\n      .then(response => response as Reviews[])\n      .catch(this.handleError);\n  }\n\n  public addReview(newReviews: Reviews): Promise<void | Reviews> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${this.storage.getItem('app-token')}`\n      })\n    };\n    return this.http.post(this.api_base_url, newReviews,httpOptions)\n      .toPromise()\n      .then(response => response as Reviews)\n      .catch(this.handleError);\n  }\n\n  public login(user: User): Promise<AuthResponse> {\n    return this.makeAuthApiCall('login', user);\n  }\n\n  public register(user: User): Promise<AuthResponse> {\n    return this.makeAuthApiCall('register', user);\n  }\n\n  private makeAuthApiCall(urlPath: string, user: User): Promise<AuthResponse> {\n    const url: string = `${this.apiBaseUrl}/${urlPath}`;\n    return this.http\n      .post(url, user)\n      .toPromise()\n      .then(response => response as AuthResponse)\n      .catch(this.handleError);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}